[MÚSICA] Hola y bienvenidos de nuevo a la quinta semana de nuestra clase, Modelado y Simulación de Procesos Naturales. Hemos repasado toda la teoría ahora del método Lattice Boltzmann. Y juntos escribieron la tubería y el código con la biblioteca NumPy. Estamos listos para ejecutar una aplicación y ver cómo funciona. Nuestra aplicación en el último módulo será el flujo alrededor de un obstáculo. Este es el código completo, que es sólo un parche de todas las piezas de código que hemos desarrollado hasta ahora en los módulos anteriores. Es un poco pequeño para leer y no quiero repasar este código. Sólo quería mostrarles lo corto que es. Con sólo 100 líneas de código, somos capaces de desarrollar completamente una aplicación, capaz de resolver un complejo problema de dinámica de cargas. Como sólo nos centramos en la primera parte de este código donde definimos algunas de las constantes, porque no he hablado de esta parte en módulos anteriores. En el mismo comienzo del programa, empezamos definiendo las dimensiones de este sistema. El código del que les voy a mostrar los resultados se está ejecutando en un sistema de tamaño 420 por 180. Lo que significa que tiene un número total de 420 por 180 celdas, o una cantidad total de variables puntuales cargadas que es 9 por 420 por 180. También definimos en las mismas unidades de la red, el radio del obstáculo. El obstáculo será de forma esférica, y tendrá un radio que será la novena parte de la altura del sistema. En tercer lugar, definimos la velocidad que vamos a imponer en la condición [INAUDIBLE] para que sea de 0,04. ¿Entonces cómo funciona esto? Lo que necesita hacer por ejemplo, es simular un sistema para el que la velocidad de la entrada sea de un metro por segundo. Lo que va a hacer es nada. No va a cambiar la velocidad de entrada de 0 a 04. Este valor se ha elegido por criterios numéricos que no tienen nada que ver con la física. Recuerde que cuando hacemos una simulación, redondeamos en unidades diferentes a cuando usted describe su sistema en unidades físicas. Las unidades físicas son quizás metros y segundos. Nuestras unidades de red son un sistema en el que delta x y delta t son iguales a 1. Todo lo que importa, recuerde, debido a la similitud en las ecuaciones de Navier-Stokes es que ambos sistemas, la simulación y su sistema físico tienen el mismo número de Reynolds. Así que no importa la velocidad de entrada que tenga, no toque este valor 0.04. Se eligió por buenas razones. Sólo trabajará con el número de Reynolds, que está en la línea siguiente. El número de Reynolds es el único parámetro aquí que tiene un significado físico. Si el número de Reynolds es bajo, entonces su sistema estará dominado por fuerzas viscosas. Tendrá un sistema que se comporta muy bien que es muy viscoso. Si el número de Reynolds es grande, dominarán las fuerzas convectivas. Y tendrá efectos no lineales, turbulencias u otros efectos. Una vez que conocemos el número de Reynolds y conocemos el tamaño del sistema en unidades de red. Es por ejemplo el diámetro o el radio de la esfera, conocemos la velocidad en la entrada. También podemos calcular la viscosidad utilizando la definición del número de Reynolds. La viscosidad es la velocidad multiplicada por el tamaño, dividida por el número de Reynolds. Y una vez que conocemos la viscosidad, podemos calcular el parámetro de relajación porque recuerde, el parámetro de relajación está directamente relacionado con la viscosidad y el entramado en este caso. El parámetro de relajación es el parámetro que necesitamos implementar a paso de colisión. Será el que determine la viscosidad del fluido en la simulación. Ahora, con esto configurado en estos parámetros, puede coger el código Python si están juntos y ejecutarlo. El código Python produce imágenes a pasos de tiempo regulares, que podemos montar usando su favorito. También puede manipular su película favorita para producir una animación. Yo hice esto por usted. Si utiliza un golpe renal de 10, esto es lo que ocurre con la velocidad constante en la entrada. El flujo se separa para fluir alrededor del obstáculo y se vuelve a unir en la estela del obstáculo, pero más abajo. Después de un estado transitorio inicial, en el que el sistema intenta hacer frente a la condición inicial, que no era tan buena, a velocidad constante, el sistema converge a un estado estacionario en el que las velocidades ya no cambian con el tiempo. Esto es bonito, pero no muy interesante. Veamos qué ocurre si aumentamos el número de Reynolds. Por ejemplo, con el número de Reynolds de 220. De nuevo, tras el estado transitorio inicial, el flujo se separa. Pero al cabo de un tiempo, se vuelve inestable, se rompe la simetría del modelo y se empieza a tener una oscilación en la estela del obstáculo. Este patrón de flujo se denomina árbol de vórtices de Foncarmon. Es un patrón muy interesante, que en realidad se da con frecuencia en la naturaleza. Por ejemplo, un convite de vórtice de von Karman es la razón por la que a veces se oye el sonido que emiten las líneas telefónicas cuando hay alguien. Puede ver que con un programa muy sencillo, podríamos resolver la dinámica del software de creación e incluso exhibir propiedades muy interesantes. Ahora tendrá la posibilidad de tomar el código, cambiar la geometría, cambiar el parámetro, y encontrar nuevas propiedades interesantes en la dinámica de fluidos. Con esto terminamos nuestros últimos módulos sobre la aplicación del flujo alrededor del cilindro. Y de hecho, mi trabajo ha terminado ahora. Pero quédese quieto, porque tenemos muchos ejercicios para usted. Y el futuro ahora, a trabajar. [MÚSICA]