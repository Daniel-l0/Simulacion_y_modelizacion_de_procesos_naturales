[MÚSICA] En la historia, las simulaciones de eventos discretos se han utilizado mucho para resolver algunos problemas de optimización complicados. Y tienen un interés real aquí. Y porque son bajas para simular sistemas que no son directamente accesibles a través de las matemáticas, como no lo sé. Y para mostrarles cómo podríamos utilizar el sistema descriptivo [INAUDIBLE] para optimizar algún problema, les presentaré la oficina de correos virtual, y veremos primero cómo podemos describir el funcionamiento de esta oficina de correos, utilizando el marco descriptivo y de simulación. Y después, cómo podríamos resolver alguna cuestión sencilla de optimización sobre ella. Imaginemos que tenemos una oficina de correos con n ventanillas. Y cada ventanilla, indexada por i, wi, tiene un estado que puede ser cerrado, abierto u ocupado. Y cada ventanilla tiene un horario diario que se establece de antemano, por ejemplo, por el director de la oficina de correos. Y el horario dice qué ventanilla está abierta y cuándo. Por ejemplo, la oficina de correos no abre a las 8:30, así que antes de esta hora todas las ventanillas están cerradas, por supuesto. Y cuando abre, abre la ventanilla W1 y W2. Una hora más tarde, cierra la ventanilla W2. Una hora más tarde cierra la primera ventanilla, abre la segunda. Y a las 11:30, abre las tres ventanillas al mismo tiempo y así sucesivamente. Y en cambio, el horario diario se repite todos los días y el gerente tiene que establecerlo, para minimizar el número de clientes en espera y para asegurarse de que el número de cada empleado hace exactamente el número de horas que se le pagan. Ni más, ni menos. En el otro extremo tenemos al cliente que entra en la oficina de correos. Y digamos que cada cliente, aquí indexado por j, ha llegado con una solicitud diferente. No sé, enviar los nombres de las cajas y demás. Y cada solicitud tarda una cantidad de tiempo en ser procesada por la ventanilla. Por ejemplo, este tiempo se anotará por pj. Así que para una simulación dada podemos saber de antemano la hora de llegada y la duración del procesamiento de cada cliente. Por ejemplo, eso puede ser una tabla para decir vale, así que llega el primer tipo a la oficina de correos a las 8:30, y lo que pedirá le llevará cinco minutos. Otro llegará diez segundos más tarde y su petición le llevará dos minutos, y así sucesivamente. Y podemos continuar así para tener una lista para todo el día. Esta lista puede establecerse de antemano. Por ejemplo, antes de que comience la simulación. Por ejemplo, teniendo gente dentro de los apóstrofes durante una semana y contando cada cliente, a qué hora entra, cuánto tiempo permanecerá en la ventanilla, etc. Y así podemos tener una idea bastante aproximada del flujo de clientes, y la carga que ejercerán sobre el sistema de la oficina de correos. El cliente en esta oficina de correos, cuando viene puede esperar en fila, en cola. Así que cuando un cliente j llega, lo primero que hace es buscar una ventanilla abierta. Si hay una ventanilla abierta, irá allí. La ventanilla estará tan ocupada durante Pj segundo. Durante una cantidad de tiempo Pj. Si no hay ninguna ventanilla abierta, ya sea porque están cerradas o están ocupadas, el cliente esperará en la cola de primero en entrar, primero en salir. Y en cuanto se abra una ventanilla ya sea porque el cliente ha terminado y pasa de ocupada a abierta o porque la ventanilla se abre en el horario por lo que pasa de cerrada a abierta. El primer cliente de la cola por supuesto irá allí. Así que esa es una oficina de correos realmente simple, casi todo el mundo está familiarizado con ella pero si intenta encontrar una ecuación que pueda describir la función de esta oficina de correos es realmente, realmente, realmente difícil. Por otro lado, es fácil describirla con el marco de eventos discretos. Eso es lo que haremos pronto. Pero antes, algunas cuestiones de optimización. En primer lugar, la pregunta que podríamos hacernos sobre el sistema, por ejemplo, es cómo organizar el horario para minimizar la longitud de la cola de espera. Por ejemplo, normalmente hay más clientes alrededor de la hora de comer que a media mañana. Así que es más interesante tener todas las ventanillas abiertas a esa hora. Pero para tener el horario más interesante, podemos intentar demasiado producir registro de llegada de clientes, e intentar encontrar el mejor horario que pueda minimizar el tiempo de espera. También podríamos definir un umbral de espera, que es aceptable, por ejemplo, esperar diez minutos es aceptable, y entonces podemos intentar cerrar las ventanillas tanto como sea posible para estar seguros de que el tiempo de espera no puede estar por encima de este umbral. Así que, por ejemplo, en ese caso, en el planteamiento de un problema de transición, el tiempo máximo que esperará el cliente es una restricción, y la función objetivo es reducir la cantidad de tiempo abierto de las ventanillas. Y entonces también podemos hacer otras preguntas sobre la organización por ejemplo algunos cuestionarios que son sólo tienen solicitud realmente simple nos gustará por ejemplo quieren comprar un no sé comprar algunos paquetes o sólo enviar uno. Y en ese caso podríamos tener una cola para las solicitudes tardías. Así que podríamos comparar varias formas de organizar la oficina de correos. Y entonces podemos tener, por ejemplo, como función objetivo de optimización la cantidad de tiempo de espera, o una función objetivo mutua y así sucesivamente. Así que podríamos hacernos muchas preguntas, si pudiéramos simular dicho sistema, y como dije antes es realmente difícil hacerlo con una ecuación de desigualdad con OD, pero es bastante sencillo en ese caso hacerlo con eventos discretos. ¿Cómo? Primero tenemos que definir los qué elementos del estado, qué empresa del estado nos interesa rastrear. Y en ese caso podemos definir realmente de forma sencilla el sistema, por ejemplo rastreando el estado de las ventanas con nuestro vector W que tiene tantos elementos como el número de ventanas, y cada elemento apuntará a los estados abierto, cerrado u ocupado. Y luego una cola FIFO de clientes en espera. Y cada cliente puede representarse simplemente por su tiempo de duración de procesamiento. La cantidad de tiempo que se necesitaría para procesar su solicitud en la oficina de correos. Así que simplemente teniendo una cola FIFO que contiene números, la cantidad de tiempo que se necesitará. Y luego podemos definir eventos con mucha facilidad. Así que tenemos tres eventos relacionados con las ventanas como la apertura de la ventana, el procesamiento de algún cliente, y el cierre. Y también podemos tener un evento con la llegada de un nuevo cliente a la oficina de correos. Y por supuesto todo este evento tendrá acciones, como se ha dicho antes. Por ejemplo el evento abrir hará una transición de estado para nuestra ventana de cerrar a abrir. Y proceso, hacemos una transición de abierta a ocupada y así sucesivamente. La acción de llegada de un cliente que llega es un poco más complicada porque primero tenemos que comprobar si algunas de las ventanillas están abiertas o no, y luego eventualmente entrar en la cola. Pero es realmente interesante de simular, hay muchas variaciones, yo no especificaré completamente el modelo porque tengo más ejemplos interesantes que mostrarles. Pero lo que es interesante aquí es entender que los eventos exógenos usualmente determinaremos completamente el cómo se comportará el sistema con respecto a lo que realmente se está midiendo. Usualmente, necesitaremos medir alguna cantidad, algunas funciones objetivas que íbamos a minimizar y no sólo la variable que quieres optimizar tendrá un papel sino también el evento exógeno. Así que es realmente importante que reflejen realmente en ese caso la carga de la oficina de correos, y si podemos obtenerlas empíricamente, eso es genial, pero la mayoría de las veces sólo tenemos estadísticas, con media, y media, alguna función de distribución. Tenemos algunos ins que se comportan como un proceso persona por ejemplo. Tenemos que generarlos al principio. Y como para optimizar nuestro problema, podemos utilizar eventos exógenos generados empíricamente, generados al azar. Necesitaremos hacer varias ejecuciones para aproximar la función objetivo que realmente queremos simular. Eso es realmente parecido al método Monte Carlo que ha visto en la conferencia anterior. Finalmente es realmente interesante decir que es el marco de simulación de eventos discretos que a cuando estamos interesados en optimizar un sistema. Simplemente una forma de calcular una función objetivo que satisfaga alguna restricción. Que normalmente está acoplada con otro sistema. La optimización puede ser un sistema codicioso, simulado animando algoritmos genéticos. Por ser genéricos, los sistemas son realmente rápidos de calcular. Podemos tener varias ejecuciones en sólo unos segundos y permiten explorar un gran espacio de parámetros. En el próximo módulo le mostraré, en breve le presentaré algunos conceptos realmente básicos sobre implementación y le mostraré cómo puede definir fácilmente una variedad en código de sistemas de eventos discretos. [MÚSICA]