[MÚSICA] Hola, y bienvenidos de nuevo a nuestra clase, Simulación y Modelación de Procesos Naturales. En el presente módulo, volvemos a uno de los potenciales que hemos introducido, el potencial de Lennard-Jones. Y hablaremos de cómo resolver la interacción con este potencial de una forma eficiente introduciendo una distancia de corte. Recordarán del módulo anterior que les mostré una forma de integrar las ecuaciones de movimiento de Newton, en el caso de un sistema de muchos cuerpos o muchas partículas. Introdujimos un esquema de Verlet en el que llevábamos el sistema de tiempo no discreto al siguiente tiempo discreto. Ahora vimos que este esquema discreto era muy eficiente computacionalmente, pero había una operación cara oculta en este esquema. Esta operación costosa es el cálculo de las fuerzas que actúan sobre los cuerpos alrededor de las partículas y que utilizamos para evaluar la aceleración de las partículas entonces integradas. Volvamos al caso de N partículas que interactúan entre sí a través de un potencial, en este caso el potencial de Lennard-Jones. De hecho, podría ser cualquier otro potencial. En principio, si quiere calcular la fuerza que actúa sobre un cuerpo dado, en este caso sobre el cuerpo uno, necesita tener en cuenta la fuerza que proviene de todos los demás cuerpos que actuarán perpetuamente sobre el cuerpo dado. Le muestro ahora un ejemplo con un total de diez cuerpos, lo que significa que si quiere conocer la fuerza que actúa sobre el cuerpo uno necesita calcular nueve términos de interacción. Por supuesto, en un sistema mayor, si tiene una galaxia con 400.000 millones de cuerpos, tendrá que calcular 400.000 millones de fuerzas que actúan sobre el cuerpo dado si lo hace con un enfoque de fuerza bruta. Decimos que, en este caso, el algoritmo tiene una complejidad termina clara que significa que el algoritmo se limita a calcular todas las fuerzas sobre todos los cuerpos que actúan sobre el sistema en un tiempo discreto dado, y toma un número de operaciones que es proporcional a n al cuadrado. Porque, en primer lugar, hay que calcular la fuerza para cada uno de esos n cuerpos. Y luego, para cada uno de esos n cuerpos, hay que calcular la interacción con todos los otros n menos uno. Por supuesto, en el caso de la gravedad, y de hecho en el caso de todas las demás fuerzas que hemos introducido aquí, debido a la Tercera Ley de Newton, las fuerzas son simétricas. La fuerza del cuerpo A que actúa sobre el cuerpo B es igual en normalidad a la fuerza del cuerpo B que actúa sobre el cuerpo A. Así que realmente sólo tenemos que evaluar la mitad de estas fuerzas. Entonces, el total de cantidad de operaciones es n(n-1)/2 pero aún así el término principal de esta expresión es n al cuadrado por lo que este es un algoritmo n al cuadrado que puede ser extremadamente caro, excepto si se aplica un esquema de inteligencia para acortar el cálculo. Veamos lo que significa una complejidad de n al cuadrado. En este gráfico, he trazado en el eje x un valor de n que va de cero a diez a la potencia 12. A lo largo del eje y simplemente he trazado el cuadrado de este valor. Este gráfico está trazado en una escala logarítmica, lo que significa que tanto el eje x como el eje y son logarítmicos. En la escala logarítmica, la curva del cuadrado de n es una curva lineal. Nos muestra cuántos cálculos tenemos que realizar para computar todas las fuerzas en una iteración de nuestro esquema de pasos temporales. Y les he mostrado para darles un orden de magnitud qué tipo de ordenadores tenemos disponibles hoy en día pueden calcular qué cantidad de interacciones. Por supuesto, el número de interacciones que un ordenador puede evaluar depende de muchos factores. Depende del tipo de potencial que se esté utilizando. También depende del tipo de algoritmo que se utilice para implementar la interacción entre los cuerpos en la estructura de datos que se esté implementando. Y en breve verá diferentes tipos de estructuras de datos que utilizaremos en diferentes tipos de contextos. Así que la potencia de cálculo, que estoy estimando aquí, es realmente sólo una estimación aproximada, y debería tomarla como un orden de magnitud y no como un valor exacto. Puede ver aquí que si está calculando estas interacciones con un ordenador de sobremesa, sólo puede calcular la interacción entre unos pocos miles de cuerpos o unos pocos miles de partículas, y eso es todo. El superordenador más rápido del mundo, si utiliza un algoritmo n cuadrado de fuerza bruta para evaluar todas las interacciones, sólo puede manejar un sistema de alrededor de 1 millón de partículas y no más. Esto no está permitido. El número de estrellas que necesita simular fi quiere simular nuestra galaxia es de aproximadamente 400.000 millones. En este caso, si toma el cuadrado de 400.000 millones, verá que tiene tantas interacciones que tener en cuenta que necesitará 100.000 millones del superordenador más rápido del mundo sólo para evaluar estas interacciones en un paso temporal en un tiempo razonable. Esto es completamente irreal. Es irreal hoy en día, y también en un futuro próximo, no podrá alcanzar esta potencia de cálculo. Esto demuestra que no es posible para problemas tan interesantes como las estrellas de la galaxia, o incluso donde las moléculas que hay en un gas, utilizar un ordenador para evaluar todas las n interacciones al cuadrado. Necesitamos encontrar atajos, formas de simplificar el problema para que los cálculos sean más rápidos. De nuevo, para resumir el problema que estamos tratando, un enfoque de fuerza bruta para tratar un sistema de n objetos es de diez al cuadrado. No podemos resolverlo hoy en día con la potencia disponible. Se necesitan estrategias para reducir los cálculos válidos. Pero volvamos al potencial de Lennard-Jones. Dado que se trata del primer potencial que va a tratar recuerda que le dije que, la mayor parte del tiempo, las moléculas que comparten un espacio común con otras moléculas no se ven entre sí. Al contrario que las estrellas, que se ven influidas constantemente por todas las demás estrellas del sistema. Las moléculas, la mayor parte del tiempo, se limitan a viajar en línea recta. No se ven afectadas por las demás moléculas. Eso se debe a que el potencial de interacción del modelo de Lennard Jones es un modelo de interacción de corto alcance. Disminuye a la potencia seis de la distancia entre dos moléculas. Como puede ver en este gráfico, si va justo a una distancia de dos a cinco veces el radio de la molécula, el potencial es casi cero. En realidad, asciende a menos del 1% del potencial de épsilon. Se vuelve insignificante. Por lo tanto, es una práctica común cuando se simula un sistema de este tipo introducir una longitud de corte. Una longitud de corte a partir de la cual despreciará todas las demás moléculas, porque considerará que su influencia sobre la molécula actual es nula. El valor común de esta longitud de corte es una longitud de d igual a 2,5 veces sigma. En la cual, como he dicho, el valor de la interacción es sólo el 1% de la profundidad del pozo potencial y se vuelve despreciable. Puede, por supuesto, ser otro valor, si quiere mejorar la precisión numérica de esta aproximación. Pero el valor de corte, no le da una respuesta para el problema más fundamental. ¿Cómo encuentra realmente las partículas cercanas? ¿Cómo encuentra las partículas que caen dentro del radio del valor de corte de dc? Si tuviera que comprobar todas las partículas para seleccionar las que están dentro de un rango razonable, necesitaría hacer n operaciones, buclear todas las demás partículas para hacerlo. No reduciría la complejidad algorítmica global de n al cuadrado porque por cada partícula, lo que significa una operación de n, tendría que comprobar todas las demás partículas. De nuevo una operación de orden n. Volverá a tener un algoritmo de n cuadrados. No ganará nada. Necesita una estructura de datos inteligente, que permita encontrar rápidamente las partículas que se encuentran en la vecindad de una partícula dada. La solución aquí, es utilizar un método basado en cuadrículas, lo que significa que tomamos el espacio ocupado por las partículas, y lo superponemos con una cuadrícula, que tiene celdas de igual tamaño. En una simulación por ordenador, representamos esta cuadrícula mediante una matriz. Cada elemento de esta matriz representa una celda de la cuadrícula que está solapada con el espacio físico. Tomemos por ejemplo la cuadrícula que tiene las coordenadas uno, dos en este sistema, y supongamos que hay cinco partículas presentes actualmente en esta celda. Estas partículas tienen un ID determinado, digamos por ejemplo ID [2, 3, 7, 11 y 19]. Lo que significa que cuando esté haciendo una simulación por ordenador aquí, cada celda de la cuadrícula contendrá una lista de IDs, de partículas, que están presentes en esta cuadrícula. La celda de la cuadrícula uno, dos tendrá una lista con los valores [2, 3, 7, 11 y 19]. No vamos a almacenar la posición y la velocidad de las partículas dentro de esta matriz. Esta matriz sólo está aquí para identificar las partículas en una posición determinada en el espacio. Utilizamos estos identificadores para buscar las posiciones y velocidades en algún otro tipo de estructura de datos Ahora, como antes, cuando hablamos de estructuras de datos, necesitamos crear esta estructura de datos. En algún momento, estas partículas se mueven, y siempre que se mueven, necesitamos reasignarlas a la celda correcta dentro de esta rejilla. Desgraciadamente, se trata de una preparación bastante rápida de realizar porque dada una partícula que ha cambiado de posición, se puede averiguar a qué celda de la cuadrícula está siendo asignada en tiempo constante, porque el espacio ocupado por las celdas de la cuadrícula es un valor constante que conocemos de antemano. Podemos tomar la posición de la partícula, y en tiempo constante, asignarla al rango de una celda de la cuadrícula dada, y a continuación, añadirla a la lista contenida en la matriz un elemento de esta celda de la cuadrícula. Asignar todas las partículas de un stat temporal dado a su correspondiente posición de cuadrícula dentro de la matriz es una operación lineal, una operación de orden n, que es mucho mejor que una operación de orden n al cuadrado. Una vez asignadas a la cuadrícula, podemos explotar esta matriz para encontrar partículas cercanas y evaluar las fuerzas que actúan sobre una partícula dada. Tomemos, por ejemplo, la partícula que en esta imagen es roja. Es la partícula con el ID 11. El círculo verde muestra la distancia de la longitud de corte dc. Sólo consideraremos la interacción de la partícula roja con partículas que estén contenidas dentro del círculo. Para encontrar estas partículas, en lugar de hacer un bucle sobre todas las demás partículas posibles, utilizaremos la rejilla para encontrar posibles candidatas. En este caso, sólo necesitamos acceder a la lista de partículas de la celda de la cuadrícula 1,1, 1,2, 2,1 y 2,2. Accedemos a cuatro celdas de la cuadrícula, accedemos a sus listas y tomamos todas las partículas contenidas en estas listas como posibles candidatas para partículas contenidas dentro del círculo de longitud de corte dc.. Una vez que las hemos seleccionado, necesitamos realizar una operación adicional para comprobar si realmente están contenidas dentro del círculo, y luego seleccionarlas para calcular las fuerzas que actúan sobre la partícula roja, la partícula número 11. ¿Cuál es la complejidad de hacer esto? Supongamos que la única celda de nuestra cuadrícula es mayor en anchura que la distancia de corte. Esto significa que, en el peor de los casos, cuando necesitamos comprobar posibles fechas de partículas vecinas, necesitamos comprobar en una simulación 2D como máximo, nueve celdas. La celda en la que se encuentra la partícula sobre la que estamos calculando las fuerzas, más, son ocho celdas vecinas. En 3D, esto serían 27 celdas. Si tenemos Nc celdas en total, el número medio de comprobación es n para la cantidad de partículas multiplicado por nueve para la vecindad, 9 N dividido por Nc donde la cantidad total de partículas se divide por la cantidad de celdas, para obtener el número medio de partículas por celda. Si tenemos muchas celdas en el sistema, bueno si el número de celdas en el sistema es del orden del número de partículas totales, y este es el caso si las longitudes de corte son mucho menores que el tamaño de el dominio completo, entonces este algoritmo tiene una complejidad de orden N, lo que significa que es un algoritmo lineal. Es un algoritmo mucho más eficiente que el algoritmo de la fuerza de la raíz y cuadrado Con esto terminamos el módulo en el que hemos hablado del potencial de Lennard-Jones, y de la técnica del método basado en la tasa y la distancia de corte para reducir los cálculos de orden N cuadrado a orden N. Siga atento al próximo módulo.