[MÚSICA] Bienvenidos de nuevo a la segunda semana del curso, Simulación y Modelado de Procesos Naturales. En este séptimo módulo, vamos a hablar sobre variables y tipos de datos en Python. Entonces, ¿qué es una variable? Una variable es un contenedor cuando quieres almacenar algunos valores a los que quieres acceder y quizás cambiar a lo largo de la ejecución de tu programa. En Python las variables son un poco diferentes de lo que pueden ser para algunos tipos de lenguajes. La mayor diferencia es que no necesitas declarar el tipo de tu variable. El intérprete sabrá directamente cuál es el tipo de tu variable cuando la asignes. Además la variable puede cambiar de tipo a través de la ejecución del programa, aquí vemos un ejemplo. Así, en la primera línea, tenemos una variable a, a la que asignamos un valor, que es 10. Después, podemos hacer cualquier tipo de operación con ella, por ejemplo, como en la línea dos, podemos imprimir el valor de esta variable, que es 10. Entonces puede que queramos cambiar nuestra variable a. Y lo que estamos haciendo es que estamos añadiendo 1 a la variable a y se lo volvemos a asignar a. El resultado se imprime y como era de esperar es 11. Por último, sólo para ilustrar el hecho de que una variable puede cambiar su tipo así que hasta ahora era un entero y ahora se convierte en una cadena. Así que a toma el valor de la cadena "Hola Mundo". Y de nuevo, podemos imprimirlo en la pantalla, y vemos que obtenemos "¡Hola Mundo!" Y así como ve, una variable es principalmente un nombre, si quiere simplificar mucho. Así que este nombre se llama identificador, y debe seguir algunas reglas para ser válido. Así que, las reglas para tener un identificador válido, así que un nombre de variable válido, el primer carácter del nombre puede ser cualquier letra Unicode o el guión bajo. Así que una letra Unicode es un estándar para codificar casi todos los alfabetos de la palabra. Así que pueden ser letras con acentos, cualquier tipo de letras. La segunda regla es que la segunda letra puede ser, de nuevo, cualquier letra Unicode, el guión bajo o un dígito. Las palabras prohibidas que puede utilizar para diferentes variables son todas las palabras clave de Python. Simplemente no puede utilizarlas. Y por último, quiero llamar su atención sobre el hecho de que los identificadores distinguen entre mayúsculas y minúsculas, por lo que una letra mayúscula no equivale a una letra minúscula. Así que el primer ejemplo de la diapositiva define una variable con un nombre impronunciable, que es sólo para ilustrar que una variable puede tener cualquier tipo de caracteres en ella. Así que, ahí tiene una letra con acento, dígitos, guión bajo, de todo. En el segundo ejemplo, tenemos un identificador incorrecto, que no es aceptado por el intérprete. ¿Por qué? Porque empieza por un número entero, que está prohibido. En el tercer ejemplo, intentamos asignar el valor 10, a la palabra clave True. True es una palabra clave de Python, por lo que esto está prohibido, y también se obtiene un mensaje de error. Por último, para ilustrar que los símbolos en minúscula y en mayúscula no son los mismos identificadores, asignamos el valor 10 a la minúscula a y el valor 20 a la mayúscula A. Cuando imprimimos el resultado, vemos que la a minúscula y la A mayúscula contienen respectivamente el número 10 y el 20. Otra cosa que vemos en este ejemplo es que en una línea podemos asignar un valor a distintas variables simplemente separándolas por comas. Bien, entonces ¿cuáles son los tipos que hay en Python? Tienes muchos tipos diferentes, aquí sólo introducimos unos pocos. Por ejemplo, tienes diferentes tipos de números, así que tienes los enteros uno, dos, tres. Y en Python 3, hay una particularidad, que son los enteros de tamaño arbitrario. Así que puede codificarlos con tantos números como quiera. Como vemos en este primer ejemplo, introducimos un nuevo comando, que es el comando tipo, que le devolverá el tipo de la variable que está mirando. La segunda clase de números que tenemos en Python son los números de coma flotante, que normalmente se codifican en 64 bits. Y también tenemos un tipo incorporado que es el número complejo. Aquí, el número imaginario se representa por J. Tenemos otro conjunto de un tipo, que es la cadena. Una cadena es una cadena de caracteres, que es inmutable. ¿Cómo definimos una cadena? Escribimos nuestros caracteres entre comillas simples, dobles, o con comillas triples. Las comillas triples tienen la particularidad, como se muestra en el ejemplo, de tener la posibilidad de estar en varias líneas y de contener comillas simples o dobles. Como las cadenas son inmutables, no podemos cambiar un valor concreto en ella. Por ejemplo, en la última línea de nuestro ejemplo, estamos intentando acceder al tercer índice, el índice número tres de nuestra cadena de caracteres que se llama C, y queremos escribir una A en ella. Esto está prohibido porque no podemos cambiar el carácter dentro de una cadena. Le presentaré dos tipos más, que son el tipo booleano y el tipo conocido. El tipo booleano es simplemente verdadero o falso, por lo que si hace una pregunta que puede ser verdadera o falsa es simplemente que es verdadera o falsa. El tipo no conocido es un tipo particular que no existe realmente en muchos otros lenguajes. Lo que puede ser muy útil para comprobar el comportamiento de su programa. Así que a la derecha de esta diapositiva, verá algunos ejemplos de cómo usamos estos booleanos y qué podemos hacer con ellos. En primer lugar, si pedimos un tipo de verdadero. Tenemos bool que es return. Entonces podemos transformar casi cualquier otro tipo en un booleano. Por ejemplo, una cadena puede ser un booleano, la cadena vacía es falsa mientras que cualquier otra cadena no vacía es verdadera. Los números también se pueden hacer transformados en booleanos así con el bool común podemos transformar 0 en Falso o cualquier otro número en Verdadero. Por último, también podemos hacer aritmética con el verdadero o falso con Verdadero teniendo el valor 1 y Falso el valor 0. Así que vea un ejemplo de sumar 2 veces 2 o sumar verdadero y falso. Esto le dará 2 y 1 respectivamente. La otra gran clase de tipos de construcción o los tipos de secuencia que son muy importantes en Python. El primero, del que quiero hablarle es el tipo menos que es una secuencia mutable de cualquier clase de tipos. Así, aquí el primer ejemplo nos preguntamos el tipo de esta cadena de caracteres que se encierra entre corchetes, y tenemos un entero, que es un int. Y 2, que es un float. Así que esto será una lista con longitud 4. Luego tenemos la tupla que es de nuevo un segundos de cualquier tipo de objetos, que es inmutable. Así, no podemos cambiar lo que está dentro de la naturaleza o lo que está dentro de nuestra tupla. La tupla se declara encerrando la secuencia de objetos entre paréntesis. Por último, les hablaré del tipo rango, que es una secuencia inmutable de números solamente. Suele utilizarse para bucles. Bien, a la derecha, vemos que tenemos ejemplos. Entonces, el primer ejemplo es crear una lista con cinco dígitos y imprimimos el índice número dos para estos. Los índices en Python se etiquetan de 0 a el tamaño de la lista menos 1. Entonces en la tercera línea asignamos un nuevo valor a este tercer índice de a y lo cambiamos a una cadena. Entonces vemos que, tenemos nuestra lista que ha sido cambiada. Entonces estamos diciendo una tupla e intentamos cambiar un valor dentro de ella. Esto da un error porque las tuplas son inmutables. En nuestra tupla, hay una particularidad, vemos que el segundo objeto que hay en nuestra tupla es una lista. Esta lista, en sí misma, es mutable, por lo que podemos cambiar cosas dentro de la lista, aunque la tupla sea inmutable. Por último, tenemos un ejemplo sobre cómo utilizar un rango. Así que, creamos un rango de 0 a 3, con este rango común, 4. Y luego lo transformamos en una lista a antes de imprimir. Bien, con esto termina el módulo sobre variables y tipos de datos. El próximo módulo será sobre operadores. Gracias por su atención. [MÚSICA]