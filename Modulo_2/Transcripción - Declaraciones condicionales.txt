[MÚSICA] Bienvenido de nuevo a este curso de la segunda semana sobre Simulación y Modelación de Procesos Naturales. En este noveno módulo, hablaremos sobre estructuras de control, en particular sobre sentencias condicionales. Pues bien, una sentencia condicional es una ramificación condicional basada en alguna información booleana. Como ejemplo en la vida real, puede pensar en comprobar el tiempo cuando está en casa y quiere salir. Si está lloviendo, cogerá su paraguas para salir. Si no está lloviendo, entonces simplemente lo dejará en casa. En un ordenador tiene una sintaxis particular para decirle que está en estado condicional de búsqueda. Así que la sintaxis para la sentencia if es un if, un espacio, y luego una condición seguida de un símbolo de dos puntos, entonces tiene que pasar a la línea siguiente. Y todo lo que se invente en la línea siguiente será una lista de sentencias que se ejecutarán si se pierde la condición uno. Entonces puede tener otras condiciones. Si la condición uno es falsa, puede tener otras condiciones a las que quiera reaccionar. Y si estas else, if condition es la palabra clave elif, tiene un espacio, y luego la condición_2 seguida de dos puntos. Entonces las sentencias incluidas en statements_2 se ejecutarán si la condición_2 es verdadera. Puede tener tantas sentencias elif como desee. También puede no tener ninguna. Por último, si todas las condiciones son falsas, puede tener la sentencia else opcional que se ejecutará en este caso. Así que permítame señalar que la indentación es crucial en Python. Así es como sabrá cuáles son las sentencias que se van a ejecutar después de que se cumpla una condición. Así que tomemos el ejemplo muy simple, cuando usted tiene una condición así que usted prueba esta condición, si la condición es verdadera en la parte inferior derecha de su diapositiva tiene dos ejemplos. En la columna de la izquierda, tiene una declaración uno que está sangrada y una declaración dos que no está sangrada. ¿Qué ocurre cuando ejecuta este programa? Prueba la condición si es verdadera, entonces ejecuta la sentencia uno. Y entonces ejecuta la sentencia_2. Si la condición es falsa la sentencia_1 no se ejecutará, sino sólo la sentencia_2. Ve la diferencia con el ejemplo de la columna derecha de este ejemplo donde si la condición se cumple entonces se ejecutarán las sentencias_1 y 2. Si la condición no se cumple, entonces no se ejecutará nada. Así que la indentación será crucial para determinar lo que ocurrirá en su programa. Veamos un ejemplo más avanzado. En este ejemplo queremos modificar un estamos en un vehículo en la vía motriz. Introduciremos nuestra velocidad manualmente y comprobaremos si vamos demasiado rápido o demasiado lento. Si vamos por encima de 120 Kilómetros por hora, donde vamos demasiado rápido, tendremos que reducir nuestra velocidad en una cierta cantidad que será calculada. Y entonces fijaremos nuestra nueva velocidad en 120. Si no estamos por encima de 120, pero estamos por debajo de 80 kilómetros por hora, tendremos que aumentar nuestra velocidad. Por un cierto número, que almacenaremos en y, y entonces fijaremos nuestra nueva velocidad en 80 e imprimiremos el mensaje de que vamos demasiado despacio, y deberíamos aumentar nuestra velocidad. Si no estamos por encima de 120 y no por debajo de 80, y simplemente imprimiremos que todo está bien. A la derecha de la diapositiva, puede ver tres salidas diferentes. En el primer caso, vamos demasiado despacio, vamos a 60 kilómetros por hora. Entonces, la salida del programa es que debemos aumentar la velocidad en 20 kilómetros por hora. En el caso dos, vamos a 151 kilómetros por hora, por lo que el programa detecta que vamos demasiado rápido y tenemos que reducir la velocidad en 31 kilómetros por hora. En el tercer caso, vamos a 89 kilómetros por hora. Estamos entre 80 y 120 y todo va bien. Tenemos otra forma de hacer una sentencia de condición, que se llama if terciario o if en línea. La sintaxis. Esta sentencia if tiene la particularidad de devolver un valor. Así que, la sintaxis de este if en línea es, alguna variable es igual a x si se cumple la condición, de lo contrario, tomará el valor, y. En este caso, no puede tener ninguna sentencia elif. En el ejemplo de la parte inferior izquierda de la diapositiva, introduciremos manualmente un entero y comprobaremos si es par o impar. Entonces, si en la segunda línea tenemos el entero x que es dividible por dos, entonces a tomará el valor par o a tomará el valor antiguo si x no es divisible por dos. Entonces, imprimiremos la siguiente cadena, que es print el valor del entero, seguido de is an y el valor almacenado en a. Los dos ejemplos de la derecha son, introducimos un número par, vemos que 10 es un número par, esta es la salida, por lo que almacenamos even en la variable a. Y tambien introducimos un numero impar, y entonces cual es 15, la salida de nuestro param es 15 es un numero impar ya que a tomo el valor impar. Con esto terminamos el modulo sobre sentencias condicionales en. El proximo modulo hablara sobre otra estructura condicional que son los bucles. Gracias por su atencion. [MUSICA]